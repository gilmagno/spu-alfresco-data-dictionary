<?xml version="1.0" encoding="UTF-8"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.1" name="spu:reabrirProcesso">
   <swimlane name="initiator"/>
   <start-state name="start">
      <task name="bpm:startTask" swimlane="initiator"/>
      <transition name="" to="end">
         <action class="org.alfresco.repo.workflow.jbpm.AlfrescoJavaScript">
            <runas>admin</runas>
            <script>
                var processo = bpm_package.children[0];
                reabrirProcesso(processo);

                function reabrirProcesso(processo) {
                    /* Status */
	                var status = getStatusTramitando();

                    /* Properties */
                    processo.properties['spu:processo.EmAnalise'] = true;
                    processo.properties['spu:processo.Status'] = 'workspace://SpacesStore/' + status.properties['sys:node-uuid'];
                    processo.save();

                    /* Destino */
                    var destino = getNode(processo.properties['spu:processo.Destino']);

                    /* Caixa de Analise Destino */
                    var caixaAnalise = getCaixaAnalise(destino);

                    /* Move */
	                processo.move(caixaAnalise);
                    
                    /* Permiss천es */
                    adicionarPermissoesDestino(processo);
                }

                function getStatusTramitando() {
	                var statusTramitando = search.luceneSearch('PATH:\"/cm:generalclassifiable//cm:SPU//cm:Status//cm:Tramitando\"');
	                return statusTramitando[0];
                }

                function getNode(nodeId) {
	                var node = search.luceneSearch('ID:"workspace://SpacesStore/' + nodeId + '"');
	                if (node != undefined &amp;&amp; node.length &gt; 0) {
		                node = node[0];
	                }
	                return node;
                }

                function getCaixaAnalise(destino) {
                    var caixasAnalise = search.luceneSearch("workspace://SpacesStore", 'PATH:"' + destino.getQnamePath() + '/*" AND TYPE:"spu:caixaanalise"');
	                var caixaAnalise = caixasAnalise[0];

                    return caixaAnalise;
                }

                function adicionarPermissoesDestino(processo) {
                    /* Permiss천es - Adiciona as permissoes da Cx. Entrada origem ao processo */
	                var protocoloOrigem = getNode(processo.properties['spu:processo.Origem']);
	                var caixaEntradaOrigem = getCaixaEntrada(protocoloOrigem);

                    /* Adicionar as permiss천es da ORIGEM como CONSUMER */
                    var permissoesCaixaEntradaOrigem = caixaEntradaOrigem.getPermissions();
	                for (var i=0; i &lt; permissoesCaixaEntradaOrigem.length; i++) {
		                permissao = getPermissaoComoHash(permissoesCaixaEntradaOrigem[i]);

                        /* Remove a permiss찾o */
                        processo.removePermission(permissao['role'], permissao['group']);

                        /* Adiciona como Consumer */
		                processo.setPermission('Consumer', permissao['group']);
	                }

                    return processo;
                }

                function getPermissaoComoHash(permissionString) {
	                var hash = new Array();
	                var allow = permissionString.substring(0, permissionString.indexOf(';'));
	                var group = permissionString.substring(permissionString.indexOf(';')+1, permissionString.lastIndexOf(';'));
	                var role = permissionString.substring(permissionString.lastIndexOf(';')+1);
	                hash['allow'] = allow;
	                hash['group'] = group;
	                hash['role'] = role;

	                return hash;
                }

                function getCaixaEntrada(origem) {
                    var caixasEntrada = search.luceneSearch("workspace://SpacesStore", 'PATH:"' + origem.getQnamePath() + '/*" AND TYPE:"spu:caixaentrada"');
	                var caixaEntrada = caixasEntrada[0];

                    return caixaEntrada;
                }
            </script>
         </action>
      </transition>
   </start-state>
   <end-state name="end"/>
</process-definition>
